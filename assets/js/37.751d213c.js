(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{173:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"pattern-in-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pattern-in-c","aria-hidden":"true"}},[t._v("#")]),t._v(" Pattern in c")]),t._v(" "),a("p",[t._v("Print pattern in C\nYou will be able to :")]),t._v(" "),a("blockquote",[a("p",[t._v("Design any kind of pattern")]),t._v(" "),a("blockquote",[a("p",[t._v("Understand element of pattern designing")]),t._v(" "),a("blockquote",[a("p",[t._v("Understand patterns")]),t._v(" "),a("blockquote",[a("p",[t._v("Understand loop in c")]),t._v(" "),a("blockquote",[a("p",[t._v("Understand Sequence analysis")])])])])])]),t._v(" "),a("h2",{attrs:{id:"what-is-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-pattern","aria-hidden":"true"}},[t._v("#")]),t._v(" What is Pattern ?")]),t._v(" "),a("p",[t._v("A pattern is set of  same or different kind of things that represent definite geometrical shapes or size.\n"),a("ins",{staticClass:"adsbygoogle",staticStyle:{display:"block","text-align":"center"},attrs:{"data-ad-layout":"in-article","data-ad-format":"fluid","data-ad-client":"ca-pub-6356177594937247","data-ad-slot":"2874230806"}}),t._v(" "),a("script",[t._v("\n(adsbygoogle = window.adsbygoogle || []).push({});\n")])]),t._v(" "),a("p",[t._v("Geometrical shape can be\n"),a("ul",[a("li",[t._v(" Triangle")]),t._v(" "),a("li",[t._v(" Square")]),t._v(" "),a("li",[t._v(" Pramid")])])]),t._v(" "),a("h2",{attrs:{id:"print-pattern-in-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#print-pattern-in-c","aria-hidden":"true"}},[t._v("#")]),t._v(" Print pattern in c")]),t._v(" "),a("img",{attrs:{src:"https://1.bp.blogspot.com/-ckdeUNygNCY/VtF6m5wZlbI/AAAAAAAAAW8/dIkPJtqdha4/s1600/00646201204040934541724.jpg",alt:"pattern-in-c"}}),t._v("\nIf you look above picture than difinetly you will find repetition of shapes or color in definite manner .\n"),a("p",[t._v("It's example of pattern.")]),t._v(" "),a("p",[t._v("For Creating sucessfull Pattern , You must know")]),t._v(" "),a("ul",[a("li",[t._v("Loop")]),t._v(" "),a("li",[t._v("Element of pattern")]),t._v(" "),a("li",[t._v("Sequence analysis of pattern")])]),t._v(" "),a("h2",{attrs:{id:"loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loop","aria-hidden":"true"}},[t._v("#")]),t._v(" Loop")]),t._v(" "),a("p",[t._v("loop are the control statement .")]),t._v(" "),a("p",[t._v("They are used when programmer needs to execute certain part of program for definite repetation")]),t._v(" "),a("p",[t._v("Different kinds of loop are\n"),a("ul",[a("li",[t._v("  For loop")]),t._v(" "),a("li",[t._v(" While loop")]),t._v(" "),a("li",[t._v("  Do while loop")])]),t._v("\nAmong these for loop is used when the number of repetition is known.")]),t._v(" "),a("p",[t._v("Although while and do-while loop can be used while number of loop is known but it is a bit complex")]),t._v(" "),a("p",[t._v("As above explained Pattern contain certain repitation and that is known , so we will use for loop for building patterns")]),t._v(" "),a("p",[t._v("Syntax- for loop")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" init"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" condition"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" increment "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n "),a("span",{attrs:{class:"token function"}},[t._v("statement")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("Here is the flow of control in a 'for' loop âˆ’")]),t._v(" "),a("blockquote",[a("p",[t._v("The init step is executed first, and only once. This step allows you to declare and initialize any loop control variables. You are not required to put a statement here, as long as a semicolon appears.")])]),t._v(" "),a("blockquote",[a("p",[t._v("Next, the condition is evaluated. If it is true, the body of the loop is executed. If it is false, the body of the loop does not execute and the flow of control jumps to the next statement just after the 'for' loop.")])]),t._v(" "),a("blockquote",[a("p",[t._v("After the body of the 'for' loop executes, the flow of control jumps back up to the increment statement. This statement allows you to update any loop control variables. This statement can be left blank, as long as a semicolon appears after the condition.")])]),t._v(" "),a("blockquote",[a("p",[t._v("The condition is now evaluated again. If it is true, the loop executes and the process repeats itself (body of loop, then increment step, and then again condition). After the condition becomes false, the 'for' loop terminates.")])]),t._v(" "),a("h2",{attrs:{id:"flow-diagram-for-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow-diagram-for-loop","aria-hidden":"true"}},[t._v("#")]),t._v(" Flow Diagram-for loop")]),t._v(" "),a("img",{attrs:{src:"https://1.bp.blogspot.com/-01wUyQJtzFg/VtGCp-BTNKI/AAAAAAAAAXM/WVO0I-Aqv7E/s1600/cpp_for_loop.jpg.png"}}),t._v(" "),a("h2",{attrs:{id:"element-of-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#element-of-pattern","aria-hidden":"true"}},[t._v("#")]),t._v(" Element of Pattern")]),t._v(" "),a("p",[t._v("There are number of element that should be well understood before building a pattern.")]),t._v(" "),a("h3",{attrs:{id:"number-of-row-and-column"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-of-row-and-column","aria-hidden":"true"}},[t._v("#")]),t._v(" Number of row and column")]),t._v(" "),a("p",[t._v("Number of column represent number of repetition of first loop first loop with five-time repetition.")]),t._v(" "),a("img",{attrs:{src:"https://3.bp.blogspot.com/-TfakElylF_8/VtGR9qEr8pI/AAAAAAAAAXo/lpDeW-BnB4w/s1600/columnandrow1.PNG"}}),t._v(" "),a("p",[t._v("Code of above program contain")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v("  ")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("main")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("--")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("//other code ")]),t._v("\n "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("Similarly each row are handled in each repetation of first loop.")]),t._v(" "),a("h3",{attrs:{id:"character-used"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#character-used","aria-hidden":"true"}},[t._v("#")]),t._v(" Character used")]),t._v(" "),a("p",[t._v("Number of different types of character denote the number of loop inside first loop.i.e nested loop.")]),t._v(" "),a("img",{attrs:{src:"https://3.bp.blogspot.com/-TfakElylF_8/VtGR9qEr8pI/AAAAAAAAAXo/lpDeW-BnB4w/s1600/columnandrow1.PNG"}}),t._v(" "),a("p",[t._v("In above pattern we have to print only '*' , so it will have only one nested lopp.")]),t._v(" "),a("img",{attrs:{src:"https://2.bp.blogspot.com/-RYHdIbQ_WNQ/VtJB0usZ_kI/AAAAAAAAAX0/8X8Natj8o8Y/s1600/images.png"}}),t._v(" "),a("p",[t._v("But in above pattern it contain two nested loop with other for easy.")]),t._v(" "),a("h3",{attrs:{id:"sequence-analysis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sequence-analysis","aria-hidden":"true"}},[t._v("#")]),t._v(" Sequence analysis")]),t._v(" "),a("img",{attrs:{src:"https://4.bp.blogspot.com/-7D3rOZKdLKA/VtF2peqgNPI/AAAAAAAAAW0/JReyoHvUw3A/s1600/pattern-in-c.PNG"}}),t._v(" "),a("p",[t._v("It is very important and easy to analysis pattern")]),t._v(" "),a("p",[t._v("This is the combination of * and blank space.  we have to  identify that in which position we need to print *and don't worry about the blank spaces.")]),t._v(" "),a("p",[t._v("we can analysis like this")]),t._v(" "),a("img",{attrs:{src:"https://4.bp.blogspot.com/-cUhSJLWSkr0/VtJF8OIYX1I/AAAAAAAAAYA/Tunj5DoPJyU/s1600/analysis.PNG"}}),t._v(" "),a("p",[t._v('[ "-" represent a blank space][ and n=9]')]),t._v(" "),a("h2",{attrs:{id:"step-by-step-solution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-by-step-solution","aria-hidden":"true"}},[t._v("#")]),t._v(" Step By Step Solution")]),t._v(" "),a("p",[t._v("1.this program is a shape of matrix. so we need to use two for loop to solve this problem.")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("for")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v("n"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n           "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v("n"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                         "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('" *"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n                         "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"  "')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//blank space")]),t._v("\n                   \n              "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n             "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("ith 1st and n(9)th index jth 1st and n(9)th index you see. each position we need to print '*' . in side loop condition we can write it as..")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("n "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('" *"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"  "')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("then output come like box.\n"),a("ins",{staticClass:"adsbygoogle",staticStyle:{display:"block","text-align":"center"},attrs:{"data-ad-layout":"in-article","data-ad-format":"fluid","data-ad-client":"ca-pub-6356177594937247","data-ad-slot":"2874230806"}}),t._v(" "),a("script",[t._v("\n(adsbygoogle = window.adsbygoogle || []).push({});\n")]),t._v(" "),a("img",{attrs:{src:"https://4.bp.blogspot.com/-q41WFk-uzT4/VtJH7yheHlI/AAAAAAAAAYM/UKO__s8ULxA/s1600/analysis2.PNG"}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("now we need to draw like:")])]),t._v(" "),a("img",{attrs:{src:"https://4.bp.blogspot.com/-mMo0i1BA7js/VtJIUeyvnmI/AAAAAAAAAYQ/gBx9Gf9vgx0/s1600/analysis3.PNG"}}),t._v(" "),a("p",[t._v("here we can see it's printing * where-where ith index and jth index are equals except middle mean [(n/2)+1=5] so we can write code for this:")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("j "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('" *"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n         "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"  "')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("Now last pattern, reverse of step(iii) pattern.. ex:")])]),t._v(" "),a("img",{attrs:{src:"https://1.bp.blogspot.com/-xZLs2O0TqWc/VtJI0IvNuiI/AAAAAAAAAYY/r7srVV7zL1M/s1600/analysis4.PNG"}}),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("so here we can analyse it's decreasing order of j index 9,8,7,6,4,3,2,1 except middle means [n/2+1=5] For this we can write the condition:-")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("i "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('" *"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n          "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"  "')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("In above example we declared the some variation of pattern based on condition... Even we combined 3 and 4 condition then we will get output like:")]),t._v(" "),a("img",{attrs:{src:"https://2.bp.blogspot.com/-pEu3zsHOXbw/VtJJPW6DIiI/AAAAAAAAAYg/MIVuZ2Ijnpk/s1600/analysis5.PNG"}}),t._v(" "),a("p",[t._v("condition:")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("j "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("i "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('" *"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n          "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"  "')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("And finally Even we combined this 5 with 2 then we will get output like: Final Example:")]),t._v(" "),a("img",{attrs:{src:"https://4.bp.blogspot.com/-WcHymOPQ6R0/VtJJ3mseOAI/AAAAAAAAAYo/iwMP0p48ZG8/s1600/analysis5.PNG"}}),t._v(" "),a("p",[t._v("so final code is:")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("main")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Enter number: "')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("scanf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("//first loop")]),t._v("\n "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v("n"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v("n"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("n "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("j "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("==")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("i"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v("n"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('" *"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n         "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"  "')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("//next line ")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("//pattern end")]),t._v("\n "),a("span",{attrs:{class:"token function"}},[t._v("getch")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br")])])])}],!1,null,null,null);e.options.__file="patterninc.md";s.default=e.exports}}]);